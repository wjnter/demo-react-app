{"version":3,"sources":["components/AddEmployee.tsx","components/Counter.tsx","components/EmployeeTable.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AddEmployee","props","message","Form","useForm","form","layout","labelCol","span","wrapperCol","onFinish","value","newEmployee","key","uuidv4","getEmployee","resetFields","Item","label","name","rules","required","type","offset","justify","onClick","style","marginLeft","htmlType","Counter","useState","valueCounter","setValueCounter","EmployeeTable","columns","title","dataIndex","dataSource","data","pagination","position","pageSize","App","setData","useEffect","a","axios","get","response","status","console","log","employee","newData","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33f1fbe9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Form, Input, Row } from \"antd\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { Employee } from \"../common/types\";\r\n\r\ntype Props = {\r\n\tgetEmployee: (employee: Employee) => void;\r\n};\r\n\r\nconst AddEmployee = (props: Props) => {\r\n\tconst message = \"Please input this field!\";\r\n\tconst [form] = Form.useForm();\r\n\r\n\tconst onFinish = (value: Employee) => {\r\n\t\tconst newEmployee = {\r\n\t\t\t...value,\r\n\t\t\tkey: uuidv4(),\r\n\t\t};\r\n\t\tprops.getEmployee(newEmployee);\r\n\t\tform.resetFields();\r\n\t};\r\n\tconst resetForm = () => {\r\n\t\tform.resetFields();\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Add New Employee</h2>\r\n\t\t\t<Form\r\n\t\t\t\tform={form}\r\n\t\t\t\tlayout=\"horizontal\"\r\n\t\t\t\tlabelCol={{ span: 8 }}\r\n\t\t\t\twrapperCol={{ span: 16 }}\r\n\t\t\t\tonFinish={onFinish}\r\n\t\t\t>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\trules={[{ required: true, message }]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input type=\"text\" />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\trules={[{ required: true, message }]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input type=\"email\" />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"Position\"\r\n\t\t\t\t\tname=\"position\"\r\n\t\t\t\t\trules={[{ required: true, message }]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input type=\"text\" />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n\t\t\t\t\t<Row justify=\"end\">\r\n\t\t\t\t\t\t<Button type=\"primary\" onClick={resetForm}>\r\n\t\t\t\t\t\t\tClear\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button style={{ marginLeft: 10 }} htmlType=\"submit\" type=\"primary\">\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AddEmployee;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nconst Counter = () => {\r\n\tconst [valueCounter, setValueCounter] = useState(0);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button\r\n\t\t\t\ttype=\"primary\"\r\n\t\t\t\tonClick={() => setValueCounter((value: number) => value + 1)}\r\n\t\t\t>\r\n\t\t\t\tIncrease\r\n\t\t\t</Button>\r\n\t\t\t<Button type=\"primary\" onClick={() => setValueCounter(0)}>\r\n\t\t\t\tReset\r\n\t\t\t</Button>\r\n\t\t\t<div>Counter: {valueCounter}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport { Table, Tag, Space, Button } from \"antd\";\r\nimport { Employee } from \"../common/types\";\r\n\r\ntype Props = {\r\n\tdata: Employee[];\r\n};\r\n\r\nconst EmployeeTable = (props: Props) => {\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"Name\",\r\n\t\t\tdataIndex: \"name\",\r\n\t\t\tkey: \"name\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Email\",\r\n\t\t\tdataIndex: \"email\",\r\n\t\t\tkey: \"email\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Position\",\r\n\t\t\tdataIndex: \"position\",\r\n\t\t\tkey: \"position\",\r\n\t\t},\r\n\t\t// {\r\n\t\t// \ttitle: \"Tags\",\r\n\t\t// \tkey: \"tags\",\r\n\t\t// \tdataIndex: \"tags\",\r\n\t\t// \trender: (tags: string[]) => (\r\n\t\t// \t\t<>\r\n\t\t// \t\t\t{tags.map((tag: string) => {\r\n\t\t// \t\t\t\tlet color = tag.length > 5 ? \"geekblue\" : \"green\";\r\n\t\t// \t\t\t\tif (tag === \"loser\") {\r\n\t\t// \t\t\t\t\tcolor = \"volcano\";\r\n\t\t// \t\t\t\t}\r\n\t\t// \t\t\t\treturn (\r\n\t\t// \t\t\t\t\t<Tag color={color} key={tag}>\r\n\t\t// \t\t\t\t\t\t{tag.toUpperCase()}\r\n\t\t// \t\t\t\t\t</Tag>\r\n\t\t// \t\t\t\t);\r\n\t\t// \t\t\t})}\r\n\t\t// \t\t</>\r\n\t\t// \t),\r\n\t\t// },\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Table\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdataSource={props.data}\r\n\t\t\t\tpagination={{ position: [\"bottomCenter\"], pageSize: 5 }}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EmployeeTable;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col } from \"antd\";\nimport \"./App.css\";\n\nimport AddEmployee from \"./components/AddEmployee\";\nimport Counter from \"./components/Counter\";\nimport EmployeeTable from \"./components/EmployeeTable\";\nimport { Employee } from \"./common/types\";\nimport axios from \"axios\";\n\nconst App = () => {\n\tconst initData: Employee[] = [];\n\tconst [data, setData] = useState(initData);\n\tconst getEmployee = (employee: Employee) => {\n\t\tconst newData = [...data];\n\t\tnewData.push(employee);\n\n\t\tsetData(newData);\n\t};\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tconst response = await axios.get(\n\t\t\t\t\"https://610a0dcad71b670017639b71.mockapi.io/api/employees\"\n\t\t\t);\n\t\t\tif (response.status === 200) {\n\t\t\t\tconsole.log(response.data);\n\t\t\t\tsetData(response.data);\n\t\t\t}\n\t\t})();\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Sample React</h1>\n\t\t\t<h2>Counter</h2>\n\t\t\t<Counter />\n\t\t\t<h2>Employee Table</h2>\n\t\t\t<Row justify=\"space-around\">\n\t\t\t\t<Col span={7}>\n\t\t\t\t\t<AddEmployee getEmployee={getEmployee} />\n\t\t\t\t</Col>\n\t\t\t\t<Col span={16}>\n\t\t\t\t\t<EmployeeTable data={data} />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}